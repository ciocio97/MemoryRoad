/routes:
  get:
    tags:
    - routes
    summary: 사용자 루트 조회. 로그인한 사용자의 루트를 조회하거나, 검색어, 필터를 통한 루트들을 요청할 수 있다.
    description: |
      1. search=true 파라미터가 주어지지 않을 경우, 토큰을 이용해 마이페이지의 루트들을 반환한다. 페이지별로 조회하기 위해 page 파라미터가 필요하다.
      2. search=true 파라미터가 주어지면 두 가지 경우로 나뉜다. \
         2.1 검색을 하지 않고 화면의 위도, 경도 안에 해당되는 루트들을 불러올 때(nwLat, nwLng, seLat, seLng파라미터가 필요하다.) <br> 2.2 루트, 장소별로 검색을 한 뒤, location, time으로 필터링 할 수 있다. (이 경우 page파라미터가 필요하다. 위도, 경도의 정보는 사용하지 않는다.)
    parameters:
        - name: page
          in: query
          description: 페이지 요청
          schema:
            type: integer
        - name: search
          in: query
          description: true로 값을 줄 경우 다른 파라미터들을 받아 검색에 활용할 수 있다.
          schema:
            type: boolean
        - name: nwLat
          in: query
          description: 화면의 북서쪽 위도
          schema:
            type: number
        - name: nwLng
          in: query
          description: 화면의 북서쪽 경도
          schema:
            type: number
        - name: seLat
          in: query
          description: 화면의 남동쪽 위도 정보
          schema:
            type: number
        - name: seLng
          in: query
          description: 화면의 남동쪽 경도 정보
          schema:
            type: number
        - name: rq
          in: query
          description: 루트명 검색어
          schema:
            type: string
        - name: lq
          in: query
          description: 장소명 검색어
          schema:
            type: string
        - name: location
          in: query
          description: 지역 선택
          schema:
            type: string
        - name: time
          in: query
          description: 시간 선택
          schema:
            type: integer
    responses:
      '200':
       description: 조회 성공
       content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 200
              routes:
                type: array
                items:
                  $ref: './openapi.yaml#/components/schemas/Route'
              count:
                type: integer
                description: 총 루트의 개수
                example: 1
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
  post:
    tags:
    - routes
    summary: 루트 최초 생성. 루트와 핀, 사진들의 정보를 전달 받는다.
    description: 루트 생성
    responses:
      '201':
       description: 추가 성공
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 201
                message:
                  type: string
                  example: created
      '400':
       description: 잘못된 형식의 요청을 받은 경우
       content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: bad img type | Bad Request
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
    requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                route:
                  type: string
                  description: 루트, 핀들의 정보
                  example: {"routeName":"루트 제목","description":"루트 설명","public":false,"color":"red","time":5,"pins":[{"ranking":0,"locationName":"경치 좋은 곳","latitude":33,"longitude":126,"lotAddress":"서울특별시 성북구","roadAddress":"서울특별시 성북구 종암로","ward":"성북구","startTime":12,"endTime":13},{"ranking":1,"locationName":"경치 좋은 곳","latitude":33,"longitude":126.123,"lotAddress":"서울특별시 구로구","roadAddress":"서울특별시 구로구","ward":"구로구","startTime":22,"endTime":23}]}
                0:
                  type: file
                  description: ranking이 0인 핀의 사진들
                1:
                  type: file
                  description: rankingdl 1인 핀의 사진들
'/routes/{routesId}':
  patch:
    tags:
    - routes
    summary: 루트 제목, 내용 수정
    description: 루트 제목, 내용 수정
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
    responses:
      '201':
       description: 수정 성공
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 201
                message:
                  type: string
                  example: updated
      '401':
       description: 없는 루트, 또는 다른 유저가 작성한 루트를 업데이트 하려는 경우
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: unauthorized
      '500':
        description: 서버 오류
        content: 
          application/json:
            schema:
              type: object
              $ref: './openapi.yaml#/components/responses/ServerErr'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              routeName:
                description: 루트 제목
                type: string
                example: 루트 제목
              description:
                description: 루트 설명
                type: string
                example: 루트 설명
              public:
                description: 루트 공개 여부
                type: boolean
                example: false
              color:
                description: 루트 색깔
                type: string
                example: red
              time:
                description: 루트 시간
                type: number
                example: 5         
  delete:
    tags:
    - routes
    summary: 루트 삭제
    description: 루트 삭제
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
    responses:
      '200':
       description: 삭제 성공
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: deleted
      '401':
       description: 없는 루트, 또는 다른 유저가 작성한 루트를 삭제 하려는 경우
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: unauthorized
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
'/routes/{routesId}/pins':
  get:
    tags:
    - routes
    summary: 해당 루트의 핀들 조회
    description: 해당 루트의 핀들 조회
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
    responses:
      '200':
       description: 조회 성공
       content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 200
              pins:
                type: array
                items:
                  $ref: './openapi.yaml#/components/schemas/Pin'
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
  post:
    tags:
    - routes
    summary: 해당 루트에 핀을 새로 생성한다.
    description: 해당 루트에 핀을 새로 생성한다.
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
    responses:
      '201':
       description: 생성 성공
       content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 201
              message:
                type: string
                example: created
      '400':
       description: 잘못된 형식의 요청
       content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: bad img type | Bad Request
      '401':
       description: 루트를 수정할 권한이 없는 경우
       content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 401
              message:
                type: string
                example: unauthorized
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
    requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 핀의 정보들
                  example: {"ranking": 2, "locationName": "핀이름", "lotAddress": "지번 주소", "roadAddress": "도로명 주소", "ward": "구", "latitude": 12.123, "longitude": 123.123, "startTime": 1, "endTime": 2}
                files:
                  type: file
                  description: 핀의 사진들
                
                
'/routes/{routesId}/pins/{pinId}':
  patch:
    tags:
    - routes
    summary: 핀 카드 수정
    description: 핀 카드 수정
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
    responses:
      '200':
       description: 수정 성공
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: updated
      '401':
        description: 없는 핀, 또는 다른 유저가 작성한 핀을 업데이트 하려는 경우
        content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: unauthorized
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
    requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 핀의 정보들
                  example: {"ranking": 1, "locationName": "새로운 핀이름", "lotAddress": "새로운 지번 주소", "roadAddress": "새로운 도로명 주소", "ward": "새로운 구", "latitude": 12.123, "longitude": 123.123, "startTime": 1, "endTime": 2}
                files:
                  type: file
                  description: 핀의 사진들. 기존 사진의 삭제는 다른 엔드포인트에 요청해야 한다.    
  delete:
    tags:
    - routes
    summary: pin 카드 삭제
    description: pin 카드 삭제
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
    responses:
      '200':
       description: 삭제 성공
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: deleted
      '401':
        description: 없는 핀, 또는 다른 유저가 작성한 핀을 삭제 하려는 경우
        content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: unauthorized
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'

'/routes/{routesId}/pins/{pinId}/pictures/{pictureId}':
  delete:
    tags:
    - routes
    summary: 핀의 사진 삭제
    description: 핀의 사진 삭제
    parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
        - name: pictureId
          in: path
          description: 사진의 아이디
          required: true
          schema:
            type: integer
    responses:
      '200':
       description: 삭제 성공
       content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: deleted
      '401':
        description: 없는 사진, 또는 다른 유저가 업로드한 사진을 삭제 하려는 경우
        content:
            application/json:
              schema:
               properties:
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: unauthorized
      '500':
        description: 서버 오류
        content: 
            application/json:
              schema:
                type: object
                $ref: './openapi.yaml#/components/responses/ServerErr'
