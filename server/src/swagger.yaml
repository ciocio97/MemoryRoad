openapi: 3.0.0
info:
  version: 1.0.0
  title: Memory-Road API docs
  description: Memory-Road의 API 문서입니다
  license:
    name: MIT
servers:
  - url: 'http://localhost:80/'
paths:
  /users:
    post:
      tags:
        - users
      summary: 회원 가입
      responses:
        '201':
          description: 회원 가입 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 201
        '409':
          description: 이미 있는 유저
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: user info already exists
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 이메일
                  type: string
                  example: abc@naver.com
                password:
                  description: 비밀 번호
                  type: string
                  example: password
                nickName:
                  description: 닉네임
                  type: string
                  example: 김사과
    patch:
      tags:
        - users
      summary: 회원 정보 업데이트
      responses:
        '201':
          description: 회원 정보 수정 성공
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 201
                message:
                  type: string
                  example: modified
        '401':
          description: 토큰 유효 시간 경과
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: expired token
        '404':
          description: 토큰의 정보로 사용자 정보를 찾지 못함
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 404
                message:
                  type: string
                  example: user not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newNickName:
                  description: 새로운 닉네임
                  type: string
                  example: 새닉네임
                newEmail:
                  description: 새로운 이메일
                  type: string
                  example: newemail@naver.com
                newPassword:
                  description: 새로운 비밀 번호
                  type: string
                  example: newpassword
    delete:
      tags:
        - users
      summary: 회원 탈퇴
      responses:
        '200':
          description: 회원 탈퇴 성공
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: 회원 탈퇴 되셨습니다.
        '401':
          description: 토큰 유효 시간 경과
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: expired token
        '404':
          description: 토큰의 정보로 사용자 정보를 찾지 못함
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 404
                message:
                  type: string
                  example: user not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  /users/auth:
    get:
      tags:
        - users
      summary: 로그 아웃
      description: 로그 아웃
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
        '401':
          description: 쿠키가 없거나 쿠키에 토큰이 없는 경우
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  error:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  /users/auth/oauth/kakao:
    post:
      tags:
        - users
      summary: 카카오 로그인
      description: 카카오 Oauth 로그인
      responses:
        '200':
          description: 카카오 Oauth 로그인 성공
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 200
                userName:
                  type: string
                  example: 용가리
                role:
                  type: string
                  example: general
                email:
                  type: string
                  example: terrabattle@naver.com
                profile:
                  type: string
                  example: 'http://k.kakaocdn.net/dn/crXJwu/btqUsRhQUx0/cH6CxkKCcteXkkcuRUulx1/img_110x110.jpg'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizationCode:
                  description: URL로 받은 인증 코드
                  type: string
  /users/auth/oauth/google:
    post:
      tags:
        - users
      summary: 구글 로그인
      description: 구글 Oauth 로그인
      responses:
        '200':
          description: 구글 Oauth 로그인 성공
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 200
                userName:
                  type: string
                  example: 화염용
                role:
                  type: string
                  example: general
                email:
                  type: string
                  example: gqwrgadsf@gmail.com
                profile:
                  type: string
                  example: 'https://lh3.googleusercontent.com/a/AATXAJwhegjEnASqnjidlgyYC7xzyu4U5jdCPpfV30MT=s96-c'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizationCode:
                  description: URL로 받은 인증 코드
                  type: string
  /users/auth/oauth/naver:
    post:
      tags:
        - users
      summary: 네이버 로그인
      description: 네이버 Oauth 로그인
      responses:
        '200':
          description: 네이버 Oauth 로그인 성공
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 200
                userName:
                  type: string
                  example: 도롱뇽
                role:
                  type: string
                  example: general
                email:
                  type: string
                  example: yayww@naver.com
                profile:
                  type: string
                  example: 'http://k.kakaocdn.net/dn/crXJwu/btqUsRhQUx0/cH6CxkKCcteXkkcuRUulx1/img_110x110.jpg'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizationCode:
                  description: URL로 받은 인증 코드
                  type: string
  /users/auth/local:
    post:
      tags:
        - users
      summary: 로컬 로그인
      description: 로컬 로그인
      responses:
        '200':
          description: 로컬 로그인 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  nickName:
                    type: string
                    example: 귤
                  email:
                    type: string
                    example: abc@naver.com
                  oauthLogin:
                    type: integer
                    example: google
        '401':
          description: 잘못된 비밀번호를 입력받은 경우
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  error:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 이메일
                  type: string
                  example: abc11@naver.com
                password:
                  description: 비밀 번호
                  type: string
                  example: '12345'
  /users/auth/local/email:
    post:
      tags:
        - users
      summary: 중복된 이메일 여부를 확인
      description: 중복된 이메일 여부를 확인
      responses:
        '200':
          description: 사용 가능한 이메일
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
        '409':
          description: 이미 있는 유저
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: user info already exists
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 이메일
                  type: string
                  example: abc11@naver.com
  /users/auth/local/password:
    post:
      tags:
        - users
      summary: 로그인한 유저의 비밀번호 일치여부 확인
      description: 로그인한 유저의 비밀번호 일치여부 확인
      responses:
        '200':
          description: 비밀번호 일치
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
        '401':
          description: 잘못된 비밀번호를 입력받거나 유효하지 않은 토큰을 받은 경우
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  error:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  description: 비밀 번호
                  type: string
                  example: '12345'
  /routes:
    get:
      tags:
        - routes
      summary: '사용자 루트 조회. 로그인한 사용자의 루트를 조회하거나, 검색어, 필터를 통한 루트들을 요청할 수 있다.'
      description: '1. page파라미터가 주어질 경우, 토큰을 이용해 마이페이지의 루트들을 반환한다. 2. page외의 파라미터들이 주어질 경우, 검색어에 따른 루트들이 반환된다.'
      parameters:
        - name: page
          in: query
          description: 페이지 요청
          schema:
            type: integer
        - name: rq
          in: query
          description: 루트명 검색어
          schema:
            type: string
        - name: lq
          in: query
          description: 장소명 검색어
          schema:
            type: string
        - name: location
          in: query
          description: 지역 선택
          schema:
            type: string
        - name: time
          in: query
          description: 시간 선택
          schema:
            type: integer
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  routes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
                  count:
                    type: integer
                    description: 총 루트의 개수
                    example: 1
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
    post:
      tags:
        - routes
      summary: 루트 최초 생성. 루트와 dots의 정보를 body로 전달 받는다.
      description: 루트 생성
      responses:
        '201':
          description: 추가 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: created
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                routeName:
                  description: 루트 제목
                  type: string
                  example: 루트 제목
                description:
                  description: 루트 설명
                  type: string
                  example: 루트 설명
                public:
                  description: 루트 공개 여부
                  type: boolean
                  example: false
                color:
                  description: 루트 색깔
                  type: string
                  example: red
                time:
                  description: 루트 시간
                  type: number
                  example: 5
                pins:
                  description: 루트에 포함된 핀들
                  type: array
                  items:
                    type: object
                    properties:
                      ranking:
                        type: integer
                        description: 핀의 순서
                        example: 0
                      locationName:
                        type: string
                        description: 핀의 이름
                        example: 경치 좋은 곳
                      latitude:
                        type: number
                        description: 위도
                        example: 33
                      longitude:
                        type: number
                        description: 경도
                        example: 126
                      address:
                        type: string
                        description: 핀의 주소
                        example: 서울특별시 성북구
                      startTime:
                        type: string
                        description: 핀의 시작 시간
                        example: '12'
                      endTime:
                        type: string
                        description: 핀의 종료 시간
                        example: '13'
  '/routes/{routesId}':
    patch:
      tags:
        - routes
      summary: '루트 제목, 내용 수정'
      description: '루트 제목, 내용 수정'
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '201': null
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
        description: 수정 성공
        content:
          application/json:
            schema: null
            properties:
              code:
                type: integer
                example: 201
              message:
                type: string
                example: updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                routeName:
                  description: 루트 제목
                  type: string
                  example: 루트 제목
                description:
                  description: 루트 설명
                  type: string
                  example: 루트 설명
                public:
                  description: 루트 공개 여부
                  type: boolean
                  example: false
                color:
                  description: 루트 색깔
                  type: string
                  example: red
                time:
                  description: 루트 시간
                  type: number
                  example: 5
    delete:
      tags:
        - routes
      summary: 루트 삭제
      description: 루트 삭제
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: deleted
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  '/routes/{routesId}/pins':
    get:
      tags:
        - routes
      summary: 해당 루트의 핀들 조회
      description: 해당 루트의 핀들 조회
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  pins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pin'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
    post:
      tags:
        - routes
      summary: 해당 루트에 핀을 새로 생성한다.
      description: 해당 루트에 핀을 새로 생성한다.
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: created
        '400':
          description: 잘못된 형식의 요청
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: bad img type | Bad Request
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 핀의 정보들
                  example:
                    ranking: '2'
                    locationName: 핀이름
                    address: 주소
                    latitude: '12.123'
                    longitude: '123.123'
                    startTime: '1'
                    endTime: '2'
                files:
                  type: file
                  description: 핀의 사진들
  '/routes/{routesId}/pins/{pinId}':
    patch:
      tags:
        - routes
      summary: 핀 카드 수정
      description: 핀 카드 수정
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: updated
        '404':
          description: '없는 핀, 또는 다른 유저가 작성한 핀을 업데이트 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ranking:
                  type: integer
                  description: 핀의 순서
                  example: 0
                locationName:
                  type: string
                  description: 핀의 이름
                  example: 경치 좋은 곳
                latitude:
                  type: number
                  description: 위도
                  example: 33
                longitude:
                  type: number
                  description: 경도
                  example: 126
                address:
                  type: string
                  description: 핀의 주소
                  example: 서울특별시 성북구
                startTime:
                  type: string
                  description: 핀의 시작 시간
                  example: '12'
                endTime:
                  type: string
                  description: 핀의 종료 시간
                  example: '13'
    delete:
      tags:
        - routes
      summary: pin 카드 삭제
      description: pin 카드 삭제
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: deleted
        '404':
          description: '없는 핀, 또는 다른 유저가 작성한 핀을 삭제 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: not found
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  /wards:
    get:
      tags:
        - wards
      summary: 구역 구분 요청
      description: 법정동 코드로 구분
      responses:
        '200':
          description: 구분하여 전달 성공
          content:
            application/json:
              schema:
                properties: null
                code:
                  type: integer
                  example: 200
                wards:
                  type: array
                  items:
                    properties:
                      id:
                        type: integer
                        description: 법정동 코드
                        example: 1150000000
                      routesNumber:
                        type: integer
                        description: 해당 법정동에 포함되는 루트의 수
                        example: 30
components:
  schemas:
    Route:
      type: object
      properties:
        id:
          type: integer
          description: 루트의 아이디
          example: 1
        userId:
          type: integer
          description: 루트를 생성한 유저의 아이디
          example: 2
        routeName:
          type: string
          description: 루트의 이름
          example: 강원도 여행 기록
        description:
          type: string
          description: 루트 설명
          example: 오늘은 친구들이랑 놀았다.
        createdAt:
          type: string
          format: date-time
          description: 생성일자
          example: 2021-12-16T13:28:26.000Z
        updatedAt:
          type: string
          format: date-time
          description: 갱신일자
          example: 2021-12-16T13:28:26.000Z
        public:
          type: integer
          description: 루트의 공개 여부
          example: 0
        color:
          type: string
          description: 루트의 색깔
          example: red
        time:
          type: integer
          description: 루트의 분 단위 시간
          example: 120
        Pins:
          type: array
          description: 핀의 간략한 정보
          items:
            type: object
            properties:
              id:
                type: integer
                description: 핀의 아이디
                example: 1
              ranking:
                type: integer
                description: 루트의 순서
                example: 1
              locationName:
                type: string
                description: 핀의 이름
                example: 경치 좋은 곳
              Pictures:
                type: array
                description: 핀의 사진 정보들
                items:
                  type: object
                  properties:
                    fileName:
                      type: string
                      description: 사진 파일명
                      example: pictureName.gif
        thumbnail:
          type: string
          description: '루트의 대표 사진파일 제목. 핀중 가장 앞 사진을 가져오며, 사진이 없을 경우 null값이 할당되어 있다.'
          example: pictureName.gif
    Pin:
      type: object
      properties:
        id:
          type: integer
          description: 핀의 아이디
          example: 1
        routesId:
          type: integer
          description: 핀이 속한 루트의 아이디
          example: 2
        ranking:
          type: integer
          description: 핀의 순서
          example: 0
        locationName:
          type: string
          description: 핀의 이름
          example: 경치 좋은 곳
        latitude:
          type: number
          description: 위도
          example: 33
        longitude:
          type: number
          description: 경도
          example: 126
        address:
          type: string
          description: 핀의 주소
          example: 서울특별시 성북구
        tooClose:
          type: boolean
          description: 해당 핀이 DB에 저장한 핀과 인접한 핀인지 판별
          example: true
        startTime:
          type: string
          description: 핀의 시작 시간
          example: '12'
        endTime:
          type: string
          description: 핀의 종료 시간
          example: '13'
        Pictures:
          type: array
          description: 핀의 사진 정보들
          items:
            type: object
            properties:
              id:
                type: number
                description: 사진 파일의 id
                example: 1
              pinId:
                type: number
                description: 사진이 속한 핀의 id
                example: 1
              fileName:
                type: string
                description: 사진 파일명
                example: pictureName.gif
  responses:
    ServerErr:
      type: object
      properties:
        code:
          type: integer
          description: http status code
          example: 500
        error:
          type: string
          description: server error description
          example: server error
